<?php

/**
 * This is the model base class for the table "areaconocimiento".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Areaconocimiento".
 *
 * Columns in table "areaconocimiento" available as properties of the model,
 * followed by relations of table "areaconocimiento" available as properties of the model.
 *
 * @property integer $id
 * @property string $area_conocimiento
 * @property double $nota
 * @property integer $historicoegresadoID
 *
 * @property Historicoegresado $historicoegresado
 */
abstract class BaseAreaconocimiento extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'areaconocimiento';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Areaconocimiento|Areaconocimientos', $n);
	}

	public static function representingColumn() {
		return 'area_conocimiento';
	}

	public function rules() {
		return array(
			array('historicoegresadoID', 'numerical', 'integerOnly'=>true),
			array('nota', 'numerical'),
			array('area_conocimiento', 'length', 'max'=>50),
			array('area_conocimiento, nota, historicoegresadoID', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, area_conocimiento, nota, historicoegresadoID', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'historicoegresado' => array(self::BELONGS_TO, 'Historicoegresado', 'historicoegresadoID'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'area_conocimiento' => Yii::t('app', 'Area Conocimiento'),
			'nota' => Yii::t('app', 'Nota'),
			'historicoegresadoID' => null,
			'historicoegresado' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('area_conocimiento', $this->area_conocimiento, true);
		$criteria->compare('nota', $this->nota);
		$criteria->compare('historicoegresadoID', $this->historicoegresadoID);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}