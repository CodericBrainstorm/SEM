<?php

/**
 * This is the model base class for the table "departamento".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Departamento".
 *
 * Columns in table "departamento" available as properties of the model,
 * followed by relations of table "departamento" available as properties of the model.
 *
 * @property integer $iddepartamento
 * @property string $nombre
 * @property integer $codigo
 * @property integer $habiles
 *
 * @property InstEstablecimiento[] $instEstablecimientos
 */
abstract class BaseDepartamento extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'departamento';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Departamento|Departamentos', $n);
	}

	public static function representingColumn() {
		return 'nombre';
	}

	public function rules() {
		return array(
			array('nombre, codigo', 'required'),
			array('codigo, habiles', 'numerical', 'integerOnly'=>true),
			array('nombre', 'length', 'max'=>80),
			array('habiles', 'default', 'setOnEmpty' => true, 'value' => null),
			array('iddepartamento, nombre, codigo, habiles', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			//'instEstablecimientos' => array(self::HAS_MANY, 'InstEstablecimiento', 'coddepto'),
                        //'egresados' => array(self::HAS_MANY, 'Egresado','coddepto'),
                        //'codmunicipio0' => array(self::BELONGS_TO, 'Municipio', 'codmunicipio'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'iddepartamento' => Yii::t('app', 'Iddepartamento'),
			'nombre' => Yii::t('app', 'Nombre'),
			'codigo' => Yii::t('app', 'Codigo'),
			'habiles' => Yii::t('app', 'Habiles'),
			'instEstablecimientos' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('iddepartamento', $this->iddepartamento);
		$criteria->compare('nombre', $this->nombre, true);
		$criteria->compare('codigo', $this->codigo);
		$criteria->compare('habiles', $this->habiles);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}